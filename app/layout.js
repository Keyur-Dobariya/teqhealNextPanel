import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({ children }) {
    const [isLoading, setIsLoading] = useState(false);
    const [messageApi, contextHolder] = message.useMessage();
    setGlobalMessageApi(messageApi);

    const pathname = usePathname();
    const urlToTitle = capitalizeLastPathSegment(pathname);
    const pageTitle = urlToTitle
        ? `${urlToTitle} - ${appString.appNameFull}`
        : `${appString.appNameFull} - ${appString.empSystem}`;

    useEffect(() => {
        document.title = pageTitle;
    }, [pathname]);

    return (
        <html lang="en">
        <body className="antialiased" cz-shortcut-listen="true">
        <AntdRegistry>
            <ConfigProvider
                componentSize="large"
                theme={{
                    components: {
                        Input: {},
                        Button: { contentFontSizeLG: 15 },
                        Card: { bodyPadding: 0, headerPadding: 15 },
                        Timeline: { itemPaddingBottom: 0 },
                    },
                    token: {
                        colorPrimary: appColor.secondPrimary,
                        colorBorderSecondary: appColor.borderClr,
                        borderRadius: 8,
                        fontFamily: 'var(--font-sans)',
                        fontSize: 13,
                    },
                }}
            >
                {contextHolder}
                <LoadingContext.Provider value={{ isLoading, setIsLoading }}>
                    <AppDataProvider>
                        <InnerAppLayout>{children}</InnerAppLayout>
                    </AppDataProvider>
                </LoadingContext.Provider>
            </ConfigProvider>
        </AntdRegistry>
        </body>
        </html>
    );
}
